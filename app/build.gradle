apply plugin: 'com.android.application'
apply plugin: 'io.fabric'

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
  signingConfigs {
    release {
      keyAlias keystoreProperties['keyAlias']
      keyPassword keystoreProperties['keyPassword']
      storeFile file(keystoreProperties['storeFile'])
      storePassword keystoreProperties['storePassword']
    }
  }

  compileSdkVersion default_config.compile_sdk

  defaultConfig {
    applicationId default_config.app_id
    minSdkVersion default_config.min_sdk
    targetSdkVersion default_config.target_sdk
    versionCode default_config.version_code

    int versionMajor = 0
    int versionMinor = 0
    int versionPatch = versionCode

    if (1000 > versionPatch && versionPatch > 99) {
      versionMajor = versionPatch / 100
      versionMinor = (versionPatch % 100) / 10
      versionPatch = (versionPatch % 100) % 10
    } else if (100 > versionCode && versionPatch > 9) {
      versionMajor = 0
      versionMinor = versionPatch / 10
      versionPatch = versionPatch % 10
    } else if (versionPatch < 10) {
      versionMajor = 0
      versionMinor = 0
      versionPatch = versionPatch / 1
    }

    versionName "${versionMajor}.${versionMinor}.${versionPatch}"
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
  }

  buildTypes {
    release {
      signingConfig signingConfigs.release
      minifyEnabled false
      shrinkResources false
      useProguard false
      proguardFile 'proguard-rules.pro'

      android.applicationVariants.all { variant ->
        variant.outputs.all {
          def formattedDate = new Date().format('yyyyMMddHHmmss')
          def appName = variant.getApplicationId().split(/[.]/)[3]
          outputFileName =
              "${appName}-${variant.name}-${variant.versionCode}-${variant.versionName}-${formattedDate}.apk"
        }
      }
    }
    debug {
    }
  }

  compileOptions {
    targetCompatibility JavaVersion.VERSION_1_8
    sourceCompatibility JavaVersion.VERSION_1_8
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  implementation files('libs/YouTubeAndroidPlayerApi.jar')

  testImplementation 'junit:junit:4.12'
  androidTestImplementation 'androidx.test:runner:1.1.0'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0'

  implementation deps.support.app_compat
  implementation deps.support.v4
  implementation deps.support.design
  implementation deps.constraint_layout

  implementation deps.room.runtime
  annotationProcessor deps.room.compiler
  implementation deps.room.rxjava2

  implementation deps.lifecycle.runtime
  implementation deps.lifecycle.extensions
  implementation deps.lifecycle.java8
  annotationProcessor deps.lifecycle.compiler
  implementation deps.lifecycle.livedata
  implementation deps.lifecycle.livedata_core

  implementation deps.dagger.runtime
  implementation deps.dagger.android
  implementation deps.dagger.android_support
  annotationProcessor deps.dagger.compiler
  annotationProcessor deps.dagger.android_support_compiler

  implementation deps.glide.runtime
  annotationProcessor deps.glide.compiler

  implementation deps.butterknife.runtime
  annotationProcessor deps.butterknife.compiler

  implementation deps.rxjava2
  implementation deps.rx_android
  implementation deps.rx_binding

  compileOnly deps.lombok.runtime
  annotationProcessor deps.lombok.compiler
  compileOnly deps.jsr250_api

  implementation deps.retrofit.runtime
  implementation deps.retrofit.gson
  implementation deps.retrofit.rxjava2

  implementation deps.okhttp.runtime
  implementation deps.okhttp.logging_interceptor

  implementation deps.firebase.core
  implementation deps.firebase.crashlytics
  implementation deps.firebase.ads

  implementation deps.searchliveo
  implementation deps.rv_divider
  implementation deps.joda_time
  implementation deps.timber
  implementation deps.easyprefs
  implementation deps.stetho
  implementation deps.lottie
  implementation deps.licensesdialog
  implementation deps.bungee
  implementation deps.jsoup
}

apply plugin: 'com.google.gms.google-services'